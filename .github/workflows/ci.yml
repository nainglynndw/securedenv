name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16, 18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Test CLI commands
        shell: bash
        run: |
          # Test basic CLI functionality
          node bin/secenv.js --help
          
          # Create test env file
          echo "TEST_VAR=test_value" > .env.test
          
          # Test backup and restore
          node bin/secenv.js backup --key "TestPassword123!"
          rm .env.test
          node bin/secenv.js restore --key "TestPassword123!"
          
          # Verify file was restored
          if [ ! -f .env.test ]; then
            echo "❌ Restore test failed"
            exit 1
          fi
          
          echo "✅ CLI tests passed"

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for outdated dependencies
        run: npm outdated || true